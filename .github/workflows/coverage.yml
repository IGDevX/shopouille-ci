name: ðŸ“Š Coverage
run-name: ðŸ“Š ${{ inputs.service }} â€¢ Coverage Analysis

on:
  workflow_call:
    inputs:
      blocking:
        required: true
        type: boolean
      service:
        required: true
        type: string
      sha:
        required: true
        type: string

jobs:
  coverage:
    name: ðŸ“Š Run Coverage for ${{ inputs.service }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ !inputs.blocking }}

    steps:
      - name: ðŸ§¾ Log Context
        run: |
          echo "ðŸ§ª Running coverage for: ${{ inputs.service }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "Workflow Repository: ${{ github.repository }}"
          echo "Target Commit: ${{ inputs.sha }}"
      
      # ----------------------------------------------
      # ðŸ”½ CHECKOUT TARGET SERVICE REPOSITORY
      # ----------------------------------------------
      - name: ðŸ“¦ Checkout target service code
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.service }}
          ref: ${{ inputs.sha }}
          token: ${{ secrets.CI_DISPATCH_TOKEN }}

      # ----------------------------------------------
      # ðŸ§° SETUP BUILD ENVIRONMENT
      # ----------------------------------------------
      - name: â˜• Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # ----------------------------------------------
      # ðŸ§ª RUN JACOCO COVERAGE
      # ----------------------------------------------
      - name: ðŸ§ª Run JaCoCo Coverage (Gradle)
        if: hashFiles('build.gradle*') != ''
        run: ./gradlew jacocoTestReport --no-daemon --stacktrace

      # ----------------------------------------------
      # ðŸ“¦ UPLOAD COVERAGE RESULTS (optional, visible in central CI)
      # ----------------------------------------------
      - name: Sanitize service for artifact name
        id: sanitize
        run: |
          s="${{ inputs.service }}"
          s="${s//\//-}"          # replace '/' with '-'
          echo "safe=${s}" >> $GITHUB_OUTPUT
      
      - name: ðŸ“¦ Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ steps.sanitize.outputs.safe }}
          path: |
            build/reports/jacoco/test/html/**
            build/reports/jacoco/test/jacocoTestReport.xml
          if-no-files-found: ignore